extends CharacterBody2D

var enemy_inattack_range = false
var enemy_attack_cooldown = true
var player_dodge_cooldown = true
var health = 100
var totalHealth = 100
var player_alive = true

var attack_ip = false
var dodge_ip = false
var basementHome = 87
var firstFloor = 50
var secondFloor = -2.5
var firstFloorXLeft = -25

var player_dodge = false

const speed = 150
var current_dir = "none"

var questPrefab = load("res://scenes/progress_meter.tscn")
var stayAliveTenSecondsQuest = null

# Setup function
func _ready():
	$AnimatedSprite2D.play("side_idle")
<<<<<<< HEAD
	MyGlobals.player = get_tree().get_root()
=======
	$"../../../ScalePlateLeft/quest_cryptDefense/playerWork".set_process(false)
	$"../../../ScalePlateLeft/quest_cryptDefense/playerWork".visible = false
>>>>>>> origin/main

func _physics_process(delta):
	player_movement(delta)
	enemy_attack()
	attack()
	#dodge()
	
	if health <= 0:
		player_alive = false #goes back to family world
		health = 0
		print("player has been killed")
		self.queue_free()
		

func spawn_player_lose_quest(_delta):
	pass
	#if(stayAliveTenSecondsQuest != null):
	#		
	#stayAliveTenSecondsQuest = questPrefab.instantiate()
	#print("poop %s spawned!" % MyGlobals.poopNum)
	#newProgressMeter._setup("Clean Poop %s" % MyGlobals.poopNum, 2, 10)
	#MyGlobals.poopNum += 1
	#$Scale/ScalePlateRight/House/Skeledog.get_parent().add_child(newProgressMeter)
	#newProgressMeter.global_position = $Scale/ScalePlateRight/House/Skeledog.global_position
	# = 

func player_movement(_delta):
	var _dir = current_dir
	var anim = $AnimatedSprite2D
	if Input.is_action_pressed("ui_right"):
		current_dir = "right"
		play_anim(1)
		velocity.x = speed
		velocity.y = 0
	elif Input.is_action_pressed("ui_left"):
		current_dir = "left"
		play_anim(1)
		velocity.x = -speed
		velocity.y = 0
	#elif Input.is_action_pressed("ui_down"):
	#	current_dir = "down"
	#	play_anim(1)
	#	velocity.y = speed
	#	velocity.x = 0
	#elif Input.is_action_pressed("ui_up"):
	#	current_dir = "up"
	#	play_anim(1)
	#	velocity.y = -speed
	#	velocity.x = 0
	elif global.player_dodge == true:
			anim.play("dodge_attack")
	else:
		play_anim(0)
		velocity.x = 0
		velocity.y = 0
	
	move_and_slide()
	
func play_anim(movement):
	var dir = current_dir
	var anim = $AnimatedSprite2D
	
	if dir == "right":
		anim.flip_h = false
		if movement  == 1:
			anim.play("side_walk")
		elif movement == 0:
			if attack_ip == false:
				anim.play("side_idle")
	if dir == "left":
		anim.flip_h = true
		if movement  == 1:
			anim.play("side_walk")
		elif movement == 0:
			if attack_ip == false:
				anim.play("side_idle")
	if dir == "down":
		anim.flip_h = true
		if movement == 1:
			anim.play("front_walk")
		elif movement == 0:
			if attack_ip == false:
				anim.play("front_idle")
	if dir == "up":
		anim.flip_h = true
		if movement  == 1:
			anim.play("back_walk")
		elif movement == 0:
			if attack_ip == false:
				anim.play("back_idle")

func player():
	pass

func _on_player_hitbox_body_entered(body):
	if body.has_method("enemy"):
		enemy_inattack_range = true

func _on_player_hitbox_body_exited(body):
	if body.has_method("enemy"):
		enemy_inattack_range = false
		
#func dodge():
#	var dir = current_dir
	
#	if Input.is_action_just_pressed("dodge") and global.player_dodge == false:
#		global.player_dodge = true
#		dodge_ip = true
#		if dir == "right":
#			$AnimatedSprite2D.flip_h = false
#			$AnimatedSprite2D.play("dodge_attack")
#			player_dodge_cooldown = false
#			$dodgetimer.start()
#		if dir == "left":
#			$AnimatedSprite2D.flip_h = true
#			$AnimatedSprite2D.play("dodge_attack")
#			global.player_dodge = true
#			player_dodge_cooldown = false
#			$dodgetimer.start()
		
		
	

func enemy_attack():
	var anim = $AnimatedSprite2D
	var dir = current_dir
	if enemy_inattack_range and enemy_attack_cooldown == true and global.player_dodge == false:
		health = health - 1
		enemy_attack_cooldown = false
		$attack_cooldown.start()
		print("skeleton health = ", health, " out of ", totalHealth)
	elif Input.is_action_just_pressed("dodge") and global.player_dodge == false:
		if dir == "right":
			$AnimatedSprite2D.flip_h = false
			anim.play("dodge_attack")
			global.player_dodge = true
			player_dodge_cooldown = false
			$dodgetimer.start()
			print("player dodged!")
		if dir == "left":
			$AnimatedSprite2D.flip_h = true
			anim.play("dodge_attack")
			global.player_dodge = true
			player_dodge_cooldown = false
			$dodgetimer.start()
			print("player dodged!")




func _on_attack_cooldown_timeout():
	enemy_attack_cooldown = true
	
func attack(): 
	var dir = current_dir
	
	if Input.is_action_just_pressed("attack"):
		global.player_current_attack = true
		attack_ip = true
		if dir == "right":
			$AnimatedSprite2D.flip_h = false
			$AnimatedSprite2D.play("side_attack")
			$deal_attack_timer.start()
		if dir == "left":
			$AnimatedSprite2D.flip_h = true
			$AnimatedSprite2D.play("side_attack")
			$deal_attack_timer.start()
		if dir == "down":
			$AnimatedSprite2D.play("front_attack")
			$deal_attack_timer.start()
		if dir == "up":
			$AnimatedSprite2D.play("back_attack")
			$deal_attack_timer.start()
	


func _on_deal_attack_timer_timeout():
	$deal_attack_timer.stop()
	global.player_current_attack = false
	attack_ip = false # Replace with function body.


func _on_dodgetimer_timeout():
	$dodgetimer.stop()
	global.player_dodge = false
	

func _on_area_2d_body_entered(_body):
	self.position.y = firstFloor
	self.position.x = firstFloorXLeft
	

func _on_first_floor_body_entered(body):
	self.position.y = firstFloor
	print(int(self.position.y), "going from first floor to second")


func _on_second_floor_body_entered(body):
	self.position.y = secondFloor
	print(int(self.position.y), "going from second floor to first")

func _process(_delta):
	print(int(self.position.y), "is your current y position!")
	print(int(self.position.x), "is your current x position!")


func _on_first_floor_to_basement_body_entered(body):
	self.position.y = basementHome
